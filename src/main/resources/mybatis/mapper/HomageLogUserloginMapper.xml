<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xsm.demo.dao.HomageLogUserloginMapper">
  <resultMap id="BaseResultMap" type="com.xsm.demo.entity.HomageLogUserlogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="log_login_id" jdbcType="BIGINT" property="logLoginId" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="login_phone" jdbcType="VARCHAR" property="loginPhone" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    log_login_id, login_ip, user_id, login_phone, row_add_time, row_update_time
  </sql>
  <select id="selectByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="queryExpand != null">
      ${queryExpand}
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gte 1 and offset gte 0">
      limit #{limit} offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from homage_log_userlogin
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from homage_log_userlogin
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into homage_log_userlogin (log_login_id, login_ip, user_id, 
      login_phone, row_add_time, row_update_time
      )
    values (#{logLoginId,jdbcType=BIGINT}, #{loginIp,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{loginPhone,jdbcType=VARCHAR}, #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id="countByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update homage_log_userlogin
    <set>
      <if test="record.logLoginId != null">
        log_login_id = #{record.logLoginId,jdbcType=BIGINT},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.loginPhone != null">
        login_phone = #{record.loginPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update homage_log_userlogin
    <set>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginPhone != null">
        login_phone = #{loginPhone,jdbcType=VARCHAR},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.xsm.demo.entity.HomageLogUserlogin">
    <id column="log_login_id" jdbcType="BIGINT" property="logLoginId" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="login_phone" jdbcType="VARCHAR" property="loginPhone" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_login_id, login_ip, user_id, login_phone, row_add_time, row_update_time
  </sql>
  <select id="selectByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from homage_log_userlogin
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from homage_log_userlogin
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample">
    delete from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    insert into homage_log_userlogin (log_login_id, login_ip, user_id, 
      login_phone, row_add_time, row_update_time
      )
    values (#{logLoginId,jdbcType=BIGINT}, #{loginIp,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{loginPhone,jdbcType=VARCHAR}, #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    insert into homage_log_userlogin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logLoginId != null">
        log_login_id,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginPhone != null">
        login_phone,
      </if>
      <if test="rowAddTime != null">
        row_add_time,
      </if>
      <if test="rowUpdateTime != null">
        row_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logLoginId != null">
        #{logLoginId,jdbcType=BIGINT},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginPhone != null">
        #{loginPhone,jdbcType=VARCHAR},
      </if>
      <if test="rowAddTime != null">
        #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample" resultType="java.lang.Long">
    select count(*) from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update homage_log_userlogin
    <set>
      <if test="record.logLoginId != null">
        log_login_id = #{record.logLoginId,jdbcType=BIGINT},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.loginPhone != null">
        login_phone = #{record.loginPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update homage_log_userlogin
    set log_login_id = #{record.logLoginId,jdbcType=BIGINT},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      login_phone = #{record.loginPhone,jdbcType=VARCHAR},
      row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    update homage_log_userlogin
    <set>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginPhone != null">
        login_phone = #{loginPhone,jdbcType=VARCHAR},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    update homage_log_userlogin
    set login_ip = #{loginIp,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      login_phone = #{loginPhone,jdbcType=VARCHAR},
      row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP}
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.xsm.demo.entity.HomageLogUserlogin">
    <id column="log_login_id" jdbcType="BIGINT" property="logLoginId" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="login_phone" jdbcType="VARCHAR" property="loginPhone" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    log_login_id, login_ip, user_id, login_phone, row_add_time, row_update_time
  </sql>
  <select id="selectByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from homage_log_userlogin
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from homage_log_userlogin
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample">
    delete from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    insert into homage_log_userlogin (log_login_id, login_ip, user_id, 
      login_phone, row_add_time, row_update_time
      )
    values (#{logLoginId,jdbcType=BIGINT}, #{loginIp,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{loginPhone,jdbcType=VARCHAR}, #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    insert into homage_log_userlogin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logLoginId != null">
        log_login_id,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginPhone != null">
        login_phone,
      </if>
      <if test="rowAddTime != null">
        row_add_time,
      </if>
      <if test="rowUpdateTime != null">
        row_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logLoginId != null">
        #{logLoginId,jdbcType=BIGINT},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginPhone != null">
        #{loginPhone,jdbcType=VARCHAR},
      </if>
      <if test="rowAddTime != null">
        #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xsm.demo.entity.HomageLogUserloginExample" resultType="java.lang.Long">
    select count(*) from homage_log_userlogin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update homage_log_userlogin
    <set>
      <if test="record.logLoginId != null">
        log_login_id = #{record.logLoginId,jdbcType=BIGINT},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.loginPhone != null">
        login_phone = #{record.loginPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update homage_log_userlogin
    set log_login_id = #{record.logLoginId,jdbcType=BIGINT},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      login_phone = #{record.loginPhone,jdbcType=VARCHAR},
      row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    update homage_log_userlogin
    <set>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginPhone != null">
        login_phone = #{loginPhone,jdbcType=VARCHAR},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xsm.demo.entity.HomageLogUserlogin">
    update homage_log_userlogin
    set login_ip = #{loginIp,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      login_phone = #{loginPhone,jdbcType=VARCHAR},
      row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP}
    where log_login_id = #{logLoginId,jdbcType=BIGINT}
  </update>
</mapper>